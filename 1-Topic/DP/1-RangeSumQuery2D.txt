class NumMatrix {
private: 
    vector<vector<int>> sum;
    
public:
    NumMatrix(vector<vector<int>>& matrix) {
        if(matrix.size() == 0 || matrix[0].size() == 0)
            return;
        
        sum = vector<vector<int>>(matrix.size(),vector<int>(matrix[0].size()));
        for(int i = 0 ; i < matrix.size() ; i++){
            for(int j = 0 ; j < matrix[0].size() ; j++){
                int v1 = matrix[i][j];
                int s1 = j - 1 >= 0 ? sum[i][j - 1] : 0;
                int s2 = i - 1 >= 0 ? sum[i - 1][j] : 0;
                int s3 = (i - 1 >= 0) && (j - 1 >= 0) ? sum[i - 1][j - 1] : 0;
                
                sum[i][j] = v1 + s1 + s2 - s3;
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int res = 0;
        res += sum[row2][col2];
        if(col1 - 1 >= 0)
            res -= sum[row2][col1 -1];
        if(row1 - 1 >= 0)
            res -= sum[row1 - 1][col2];
        if(col1 - 1 >= 0 && row1 - 1 >= 0)
            res += sum[row1 -1][col1 - 1];
        
        return res; 
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */