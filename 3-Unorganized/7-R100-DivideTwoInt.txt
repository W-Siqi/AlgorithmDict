class Solution {
public:
    int divide(int dividend, int divisor) {
        if(dividend==INT_MIN&&divisor==1) return INT_MIN;
        if(dividend==INT_MIN&&divisor==-1) return INT_MAX;
        
        bool isNag = IsNag(dividend,divisor);
        dividend = NABS(dividend);
        divisor = NABS(divisor);

        int rm = dividend;
        int res = 0;
        
        while(rm <= divisor){
            int resVal=1;
            long int diviVal = divisor;
            
            while(rm - diviVal <= diviVal){
                resVal = resVal<<1;
                diviVal = -((-diviVal)<<1);
            }            
            
            rm-=diviVal;
            res+=resVal;
        }
        
        if(isNag){
            return -res;
        }
        else{
            return res;
        }
    }
    
    bool IsNag(int a, int b){
        if(a > 0 && b > 0 ){
            return false;
        }
        else if(a < 0 && b < 0){
            return false;
        }
        
        return true;
    }
    
    int NABS(int a){
        if(a>0){
           return -a;
        }
        else{
           return a;
        }
    }
};